# Generated by Django 4.2.16 on 2024-10-31 01:20

import InvenTree.fields
import InvenTree.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import generic.states.fields


class Migration(migrations.Migration):

    dependencies = [
        ('part', '0130_alter_parttesttemplate_part'),
        ('order', '0101_purchaseorder_status_custom_key_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReturnOrderPartLineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, help_text='JSON metadata field, for use by external plugins', null=True, verbose_name='Plugin Metadata')),
                ('reference', models.CharField(blank=True, help_text='Line item reference', max_length=100, verbose_name='Reference')),
                ('notes', models.CharField(blank=True, help_text='Line item notes', max_length=500, verbose_name='Notes')),
                ('link', InvenTree.fields.InvenTreeURLField(blank=True, help_text='Link to external page', verbose_name='Link')),
                ('target_date', models.DateField(blank=True, help_text='Target date for this line item (leave blank to use the target date from the order)', null=True, verbose_name='Target Date')),
                ('quantity', InvenTree.fields.RoundingDecimalField(decimal_places=5, default=0, help_text='Enter stock return quantity', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('received_date', models.DateField(blank=True, help_text='The date this this return item was received', null=True, verbose_name='Received Date')),
                ('outcome', generic.states.fields.InvenTreeCustomStatusModelField(choices=[(10, 'Pending'), (20, 'Return'), (30, 'Repair'), (40, 'Replace'), (50, 'Refund'), (60, 'Reject')], default=10, help_text='Outcome for this line item', verbose_name='Outcome')),
                ('price_currency', djmoney.models.fields.CurrencyField(choices=[], default='', editable=False, max_length=3, null=True)),
                ('price', InvenTree.fields.InvenTreeModelMoneyField(blank=True, currency_choices=[], decimal_places=6, default_currency='', help_text='Cost associated with return or repair for this line item', max_digits=19, null=True, validators=[djmoney.models.validators.MinMoneyValidator(0)], verbose_name='Price')),
                ('outcome_custom_key', generic.states.fields.ExtraInvenTreeCustomStatusModelField(blank=True, default=None, help_text='Additional status information for this item', null=True, verbose_name='Custom status key')),
                ('order', models.ForeignKey(help_text='Return Order', on_delete=django.db.models.deletion.CASCADE, related_name='part_lines', to='order.returnorder', verbose_name='Order')),
                ('part', models.ForeignKey(help_text='Select part to return from customer', limit_choices_to={'salable': True, 'virtual': False}, on_delete=django.db.models.deletion.CASCADE, related_name='return_order_part_line_items', to='part.part', verbose_name='Part')),
            ],
            options={
                'verbose_name': 'Return Order Part Line Item',
                'unique_together': {('order', 'part')},
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
    ]
